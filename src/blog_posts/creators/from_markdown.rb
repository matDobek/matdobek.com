module BlogPosts
  module Creators
    class FromMarkdown
      INDEX_FILE        = "index.html".freeze
      MARKDOWN_DIR_PATH = "posts__markdown".freeze
      HTML_DIR_PATH     = "posts__html".freeze

      def call
        markdown_directory = Persistance::Directory.new(directory_path: markdown_dir_path)
        post_collection = []
        file_collection = []

        markdown_directory.read
        markdown_directory.file_collection.each do |file|
          post_data = Adapters::MarkdownFileToPostEntity.new(file: file).call

          post_entity = PostEntity.new(
            date: post_data[:date],
            title: post_data[:title],
            category: post_data[:category],
            html_content: post_data[:html_content],
          )

          file_data = Adapters::PostEntityToHTMLFile.new(entity: post_entity).call

          html_file = Persistance::File.new(
            filename: file_data[:filename],
            content: file_data[:content],
          )

          post_collection << post_entity
          file_collection << html_file
        end

        html_directory = Persistance::Directory.new(directory_path: html_dir_path, file_collection: file_collection)
        html_directory.write






        links = post_collection.zip(file_collection).map do |post, file|
          title = "[#{post.date} ; #{post.category}] #{post.title}"
          url = "#{html_dir_path}/#{file.filename}.html"

          "<li><a href='#{url}'>#{title}</a></li>"
        end

        phrase_to_replace = /<!-- autogenerated text - do not remove me -->.*<\!-- autogenerated text - do not remove me -->/m
        replacement = "<!-- autogenerated text - do not remove me -->\n#{links.join("\n")}\n<!-- autogenerated text - do not remove me -->"

        index_file_content          = ::File.open(index_file).read
        index_file_with_new_content = index_file_content.gsub(phrase_to_replace, replacement)

        ::File.open(index_file, "w") { |f| f << index_file_with_new_content }
      end

      private

      def index_file
        INDEX_FILE
      end

      def markdown_dir_path
        MARKDOWN_DIR_PATH
      end

      def html_dir_path
        HTML_DIR_PATH
      end
    end
  end
end
